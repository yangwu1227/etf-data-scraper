AWSTemplateFormatVersion: "2010-09-09"
Description: A simple VPC setup with two public subnets across two AZ's and a security group allowing all outbound traffic.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16 # IPv4 CIDR range for the VPC, 65,536 IP addresses
      EnableDnsSupport: true 
      EnableDnsHostnames: true 
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}_vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}_igw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24 # Smaller range with 256 IP addresses
      MapPublicIpOnLaunch: true
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}_public_subnet_1

  PublicSubnet2:
    Type: AWS::EC2::Subnet 
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.4.0/24 # Smaller range with 256 IP addresses
      MapPublicIpOnLaunch: true
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}_public_subnet_2

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}_rtb

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0 # All IPv4 addresses
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref RouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow outbound traffic for ETF scraper application
      VpcId: !Ref VPC
      SecurityGroupEgress:
        - IpProtocol: -1  
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}_sg

Outputs: # Export the VPC ID, subnet IDs, and security group ID for other stacks downstream to use

  PublicSubnet1Id:
    Description: ID of the first public subnet
    Value: !Ref PublicSubnet1

  PublicSubnet2Id:
    Description: ID of the second public subnet
    Value: !Ref PublicSubnet2

  SecurityGroupId:
    Description: ID of the security group
    Value: !Ref SecurityGroup
